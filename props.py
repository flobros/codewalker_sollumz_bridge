import bpy
from bpy.props import (
    StringProperty,
    CollectionProperty,
    PointerProperty,
    IntProperty,
    BoolProperty
)
from bpy.types import PropertyGroup

DEFAULT_PORT = "5555"
DEFAULT_GTAPATH = "C:\\Program Files\\Rockstar Games\\Grand Theft Auto V"
DEFAULT_CODEWALKER_OUTPUT_DIR = "C:\\GTA_FILES\cw_out"
DEFAULT_BLENDER_OUTPUT_DIR = "C:\\GTA_FILES\\blender_out"
DEFAULT_FIVEM_DIR = "C:\\GTA_FILES\\fivem_out"

class SearchResultItem(PropertyGroup):
    name: StringProperty(name="Result Name")

class CW_Sollumz_Properties(PropertyGroup):
    show_api_section: BoolProperty(name="Show API Config", default=False)
    show_export_section: BoolProperty(name="Show Export", default=False)
    show_search_section: BoolProperty(name="Show Search", default=True)
    api_port: StringProperty(
        name="API Port",
        description="Port of the running CodeWalker API",
        default=DEFAULT_PORT
    )
    gtapath: StringProperty(
        name="GTA V Path",
        description="Path to the GTA V installation",
        default=DEFAULT_GTAPATH
    )
    search_filename: StringProperty(
        name="Filename",
        description="Enter filename to search",
        default=""
    )
    codewalker_output_dir: StringProperty(
        name="CodeWalker Output Directory",
        description="Path to the temporary work directory",
        default=DEFAULT_CODEWALKER_OUTPUT_DIR  # Reusing DEFAULT_OUTPUT_DIR constant
    )
    blender_output_dir: StringProperty(
        name="Blender Output Directory",
        description="Path to the Blender export directory",
        default=DEFAULT_BLENDER_OUTPUT_DIR
    )
    fivem_output_dir: StringProperty(
        name="FiveM Output Directory",
        description="Path to the FiveM export directory",
        default=DEFAULT_FIVEM_DIR
    )
    rpf_path: StringProperty(
        name="RPF Archive Path",
        description="Path to the target RPF archive",
        default="C:\\Program Files\\Rockstar Games\\Grand Theft Auto V\\modstore\\new.rpf"
    )
    export_with_ytyp: BoolProperty(
        name="With YTYP (autogenerated)",
        description="Enable to auto-generate and export YTYP",
        default=False
    )
    search_results: CollectionProperty(type=SearchResultItem)

classes = [SearchResultItem, CW_Sollumz_Properties]

def register():
    for cls in classes:
        bpy.utils.register_class(cls)
    # âœ… Register properties only after class is registered
    bpy.types.Scene.cw_sollumz_props = PointerProperty(type=CW_Sollumz_Properties)
    bpy.types.Scene.cw_sollumz_active_index = IntProperty()

def unregister():
    del bpy.types.Scene.cw_sollumz_props
    del bpy.types.Scene.cw_sollumz_active_index
    for cls in reversed(classes):
        bpy.utils.unregister_class(cls)
